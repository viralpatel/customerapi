swagger: "2.0"
info:
  description: "Customer API allows different clients such as Mobile, Web etc to securely connect and perform customer management in CRM through REST API."
  version: "1.0.0"
  title: "Customer API"
  termsOfService: "http://company.com/terms/"
  contact:
    email: "apiteam@company.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "api.company.com"
basePath: "/v1"
tags:
- name: "Customer"
  description: "Customers of organisation"
  externalDocs:
    description: "Docs"
    url: "https://crm.com/customer"
    
parameters:
  x-correlation-id:
    name: "correlationId"
    description: "Unique Id representing request used for distributed tracing"
    in: "header"
    type: "string"
    required: true
  customerId:
    name: "customerId"
    description: "Unique identifier of a Customer in CRM system"
    in: "path"
    type: "string"
    required: true
    
schemes:
- "https"
- "http"
paths:
  /customers:
    post:
      tags: 
      - "Customer"
      summary: "Create customer"
      description: "Create a new Customer record in Organisation CRM system."
      operationId: "createCustomer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/x-correlation-id'
      - in: "body"
        name: "body"
        description: "Customer object for creating new customer in CRM"
        required: true
        schema:
          $ref: "#/definitions/Customer"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/CreateCustomerResponse"
        400:
          description: "Bad request"
        403:
          description: "Unauthorised acceess"
        500:
          description: "Server error"
      security:
      - oauth2:
        - "create:customers"       
        - "admin:customers"       
        
  /customers/{customerId}:  
    put:
      tags:
      - "Customer"
      summary: "Update customer"
      description: "Update an existing Customer record by customerId in Organisation CRM system."
      operationId: "updateCustomer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/customerId'
        - in: "body"
          name: "body"
          description: "Customer object for creating new customer in CRM"
          required: true
          schema:
            $ref: "#/definitions/Customer"
      responses:
        400:
          description: "Bad request"
        403:
          description: "Unauthorised access"
        404:
          description: "Customer not found"
        500:
          description: "Server error"
      security:
      - oauth2:
        - "update:customers"       
        - "admin:customers"       
          
    delete:
      tags:
      - "Customer"
      summary: "Delete customer"
      description: "Delete an existing Customer record by customerId in Organisation CRM system."
      operationId: "deleteCustomer"
      parameters:
        - $ref: '#/parameters/customerId'        
      responses:
        400:
          description: "Bad request"
        403:
          description: "Unauthorised access"
        404:
          description: "Customer not found"
        500:
          description: "Server error"
      security:
      - oauth2:
        - "delete:customers"       
        - "admin:customers"       

securityDefinitions:
  oauth2:
    type: "oauth2"
    authorizationUrl: "http://company.com/oauth/dialog"
    flow: "implicit"
    scopes:
      create:customers: "create new customer"
      update:customers: "update customer"
      delete:customers: "delete customer"
      admin:customers: "create, update and delete customer"

definitions:
  
  Customer:
    type: "object"
    required:
    - "firstName"
    - "lastName"
    - "dateOfBirth"
    - "emailAddress"
    - "postalAddresses"
    properties:
      firstName:
        type: "string"
        description: "Customer's first name e.g. John"
        maxLength: 30
        minLength: 1
      lastName:
        type: "string"
        maxLength: 30
        minLength: 1
      dateOfBirth:
        type: "string"
        format: "date"
      emailAddress:
        type: "string"
        format: "email"
        maxLength: 30
        minLength: 3
      postalAddresses:
        type: "array"
        items:
          $ref: "#/definitions/Address"

  Address:
    type: "object"
    properties:
      addressType:
        type: "string"
        enum:
        - HOME
        - OFFICE
      streetNumber:
        type: "string"
        maxLength: 8
      streetName:
        type: "string"
        maxLength: 20
      suburb:
        type: "string"
        maxLength: 20
      postalCode:
        type: "string"
        maxLength: 10
      city:
        type: "string"
        maxLength: 25
      state:
        type: "string"
        maxLength: 25
      country:
        type: "string"
        maxLength: 30

  CreateCustomerResponse:
    type: object
    properties:
      id:
        type: "string"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"